@using Bookmyhome.Application.Command.Interfaces;
@using Bookmyhome.Domain.Models;

@inject IBoligCommand BoligCommandService
@inject IAdresseCommand AdresseCommandService
@inject IPostnummerOgByCommand PostnummerCommandService
@inject IBrugerCommand BrugerCommandService

@rendermode InteractiveServer

@page "/AddBoligPage/{BrugerId:int}"

<h3>AddBoligPage</h3>


<div class="group-box">
	<EditForm EditContext="@editContext"
		OnValidSubmit="@HandleValidSubmit"
			  OnInvalidSubmit="@HandleInValidSubmit">
			  <DataAnnotationsValidator/>

		<div class="col-6 mb-3">
			<label for="Title">Title</label>
			<InputText id="Title" @bind-Value="boligModel.Title" class="form-control" />
			<ValidationMessage For="@(() => boligModel.Title)" />
		</div>
		<div class="col-6 mb-3">
			<label for="Beskrivelse">Beskrivelse</label>
			<InputText id="Beskrivelse" @bind-Value="boligModel.Beskrivelse" class="form-control" />
			<ValidationMessage For="@(() => boligModel.Beskrivelse)" />
		</div>
		<div class="col-6 mb-3">
			<label for="PrisPrNat">Pris pr nat</label>
			<InputNumber id="PrisPrNat" @bind-Value="boligModel.PrisPrNat" class="form-control" />
			<ValidationMessage For="@(() => boligModel.PrisPrNat)" />
		</div>
		<div class="col-6 mb-3">
			<label for="Vejnavn">Vejnavn</label>
			<InputText id="Vejnavn" @bind-Value="adresseModel.Vejnavn" class="form-control" />
			<ValidationMessage For="@(() => adresseModel.Vejnavn)" />
		</div>
		<div class="col-6 mb-3">
			<label for="Husnummer">Husnummer</label>
			<InputText id="Husnummer" @bind-Value="adresseModel.Husnummer" class="form-control" />
			<ValidationMessage For="@(() => adresseModel.Husnummer)" />
		</div>
		<div class="col-6 mb-3">
			<label for="Postnummer">Postnummer</label>
			<InputNumber id="Postnummer" @bind-Value="adresseModel.Postnummer" @oninput="UpdateBynavn" class="form-control"  />
			<ValidationMessage For="@(() => adresseModel.Postnummer)" />
		</div>

		<div class="col-2 mb-3 postnummer">
			<label for="Bynavn">By</label>
			<input id="Bynavn" type="text" value="@Bynavn" class="form-control" readonly />
		</div>

		<div>
		</div>
		<div class="d-block">
			<button type="submit" class="btn btn-primary">Tilføj Bolig</button>
		</div>


	</EditForm>
</div>


@code {

	[Parameter]
	public int BrugerId { get; set; }

	[Inject]
	public IBoligCommand IBoligService { get; set; }

	[Inject]
	public IAdresseCommand IAdresseService { get; set; }

	[Inject]
	public IPostnummerOgByCommand IPostnummerService { get; set; }

	[Inject]
	public IBrugerCommand IBrugerService { get; set; }

	private List<PostnummerOgBy> _PostnummerList = new List<PostnummerOgBy>();

	private Bruger _bruger;

	private EditContext editContext;
	private Bolig boligModel = new Bolig();
	private Adresse adresseModel = new Adresse();

	protected override void OnInitialized()
	{
		_bruger = IBrugerService.GetBruger(BrugerId);
		editContext = new EditContext(boligModel);
		_PostnummerList = IPostnummerService.GetAll();
	}

	private void HandleValidSubmit()
	{
		boligModel.HostBrugerID = _bruger.BrugerID;
		_bruger.Udlejer = true;
		IBrugerService.UpdateBruger(_bruger);
		IAdresseService.AddAdresse(adresseModel);
		boligModel.AdresseID = adresseModel.AdresseID;
		IBoligService.AddBolig(boligModel);
		Console.WriteLine("HandleValidSubmit called..");
	}
	private void HandleInValidSubmit()
	{
		Console.WriteLine("HandleInValidSubmit called..");
	}


	private string Bynavn { get; set; } = string.Empty;

	private void UpdateBynavn(ChangeEventArgs e)
	{
		if (int.TryParse(e.Value?.ToString(), out int postNummer))
		{
			adresseModel.Postnummer = postNummer;

			var match = _PostnummerList.FirstOrDefault(x => x.Postnummer == postNummer);
			if (match != null)
			{
				Bynavn = match.Bynavn;
			}
			else
			{
				Bynavn = null;
			}
			Console.WriteLine($"PostNummer: {postNummer}, ByNavn: {Bynavn}");
		}
		else
		{

			Console.WriteLine("Invalid postnummer input.");
		}
	}

}
